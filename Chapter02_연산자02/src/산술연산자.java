/*
 * 1. 실행 순서
 *    => 자바 파일명과 클래스명 동일(대소문자 구분)
 *              컴퓨터가 인식하는 언어
 *              javac(컴파일) => 0,1               java(인터프리터)
 *    A.java =======================> A.class ==================> 실행
 *    ------                         바이너리 코드
 *       ㅣ                          모든 운영체제에 호환 (리눅스에서 실행ㅇ)
 *     원시소스(프로그래머)
 *      ==> 이클립스 ㅣ javac + java => ctrl + f11
 * 2. 소스코딩의 주의점
 *    1) 대소문자 구분
 *    2) 명령문 => ;
 *    3) 주석 처리 
 *    4) 들여넣기 => { => 엔터 }
 *    
 * 3. 자바 개발자 약속
 *    1) 변수 / 클래스 / 메소드 / 상수 /인터페이스
 *    변수 : 소문자 시작 => 다른 단어는 첫자 대문자
 *    상수 : 모든 알파벳 대문자
 *    클래스, 인터페이스 : 첫자는 대문자 => MainClass
 *    메소드는 변수와 동일
 * *** 프로그램 (데이터 관리)
 *     데이터 저장 
 *      = 메모리 => 프로그램 종료시 없어짐
 *        한개의 데이터 관리
 *        여러개의 데이터 관리
 *      --------------
 *      = 파일
 *      = RDBMS (오라클)
 *      -------------- 영구적인 저장 장치
 * 4. 변수 / 연산자 / 제어문 / 데이터 모아서 관리 / 재사용 / 예외처리
 *    => 라이브러리를 이용한 조립식
 * 4. 응용 : 네트워크 , 파일
 * -----------------------------------------------------
 * 오라클 (21c) : CRUD 
 * -----------------------------------------------------
 * 브라우저 연동 : HTML/CSS3/JAVASCRIPT
 *                       ----------- Jquery(Ajax)
 *                       ----------- VueJs (Vuex)
 *                       ----------- ReactJs (Redux)
 *                       옵션-------- TypeScript/NodeJS
 *                                             -------
 *                                                ㄴ 실시간 상담
 * JSP => Back-end + Front-end
 * --- MVC (springMVC => 직접 Spring 제작)
 * DataBase 연동 => MyBatis / JPA
 * Spring 
 * Spring - Boot : ThymeLeaf
 * AWS => PaaS => EC2

 * -------------------------------------
 * Python : 데이터 분석, 시각화
 *          Pandas / Numpy / MatplotLab
 *          옵션 : 머신러닝 / 딥러닝
 *                -------------
 *                
 * 변수 : 메모리에 한개 데이터를 저장하는 공간의 별칭
 *       ----- 주소
 *       변수명 설정
 *       --------
 *       1. 알파벳 시작(대소문자 구분) , 한글 
 *       2. 숫자 사용 가능(앞에 x)
 *       3. 키워드는 사용 금지
 *       4. 공백 금지
 *       5. 특수문자 _ $ 만 사용 가능
 *       6. 기타 => 압축
 *--------------------------------------
 * 변수 선언 방식 :데이터형 변수명;
 * 변수의 초기화 ㅣ 변수명 = 값;
 * 변수의 활용 ={} 벗어나면 삭제된다
 * 변수의 종류 ===> 지역변수 {}
 * 
 * 데이터를 저장 ===> 데이터를 가공 ===> 가공돤 데이터 출력
 *                    ㅣ                 ㅣ
                     연산자             화면에 출력
                     제어문
                     ---- 메소즈
 * 1. 산술 연산자
 *    1) 연산은 같은 데이터 형 끼리만 연산가능
 *       ** int 이하 데이터형 (바이트, 촤(스트링x), 쇼트)연산이 되면 결과값은 int!!
 *    2) + : 산술 처리 , 문자열 결합('' = 문자 / "" = 문자열)
 *       ** 1 4 +"7" + 7 - 5 ~> 오류!!!!
 *          ---> 순서로 결해서 문자열 - 숫자 여서 안됨
 *            ---> ( ) 괄호 필요
 *          5 + "5" + 6 * 2 ~? 오류 안남 우선순위 먼저계산하기때문에 !!
 *       ** 정수/정수 = 정수 (실수 안나옴 SO 하나라도 실수로 바꿔줘야함)
 *          0으로 나누면 안됨
 *       ** % 나머지 부호는 왼쪽 부호가 남는다!! 
 *            	    
 */
public class 산술연산자 {

	public static void main(String[] args) {
		{
			int a = 10;
		}
		int a = 10; // {} 블록 내의 변수와 다른 변수 ~> 지역변수이기 때문
		System.out.println(a);
		
		int b = (int)(Math.random()*100)+1;
	    int c = (int)(Math.random()*100)+1;
	    int d = (int)(Math.random()*100)+1;
	    
	    System.out.println((b+c+d));
	    System.out.println((b+c+d)/3.0);
	    System.out.printf("%.2f\n", (b+c+d)/3.0); //%.2f ** F!!!!!!!!!  " \n "
	    System.out.println();
	    /*
	     * 실수 : %f %.2f %.3f
	     * 정수 : %d
	     * 문자 : %c
	     * 문자열 : %s
	     */
	    System.out.println("=====================");
	    System.out.print("aaa"); //print 한줄 연속 출력
	    System.out.print("bbb");
	}

}
